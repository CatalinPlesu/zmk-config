// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

/ {
    keys {
        compatible = "gpio-keys";

        soft_off_gpio_key: soft_off_gpio_key { gpios = <&gpio1 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; };
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-keys = <&soft_off_gpio_key>;
        wakeup-source;
    };

    side_band_behavior_triggers: side_band_behavior_triggers {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&wakeup_scan>;
        auto-enable;
        wakeup-source;
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };

    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    combos {
        compatible = "zmk,combos";

        settings-layer-left {
            bindings = <&to 4>;
            key-positions = <0 3>;
            timeout-ms = <500>;
            require-prior-idle-ms = <1>;
            layers = <0>;
        };

        settings-layer-right {
            bindings = <&to 4>;
            key-positions = <6 9>;
            timeout-ms = <500>;
            require-prior-idle-ms = <1>;
            layers = <0>;
        };

        lgui {
            bindings = <&kp LGUI>;
            key-positions = <30 12>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        rgui {
            bindings = <&kp LGUI>;
            key-positions = <33 17>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        lalt {
            bindings = <&kp LALT>;
            key-positions = <13 30>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        ralt {
            bindings = <&kp LALT>;
            key-positions = <16 33>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        lshift {
            bindings = <&kp LSHIFT>;
            key-positions = <31 12>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        rshift {
            bindings = <&kp LSHIFT>;
            key-positions = <32 17>;
            timeout-ms = <100>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        lctrl {
            bindings = <&kp LCTRL>;
            key-positions = <13 31>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        rctrl {
            bindings = <&kp LCTRL>;
            key-positions = <16 32>;
            timeout-ms = <100>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        ctrl-shift {
            bindings = <&kp LC(LSHIFT)>;
            key-positions = <16 17 32>;
            timeout-ms = <100>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        l_ctrl_shift {
            bindings = <&kp LC(LSHIFT)>;
            key-positions = <12 13 31>;
            timeout-ms = <100>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        macros {
            bindings = <&tog 0>;
            key-positions = <30 33>;
        };

        mouse {
            bindings = <&tog 0>;
            key-positions = <31 32>;
        };

        r-ctrl-alt {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <16 17 33>;
            timeout-ms = <100>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };

        l-ctrl-alt {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <12 13 30>;
            timeout-ms = <100>;
            require-prior-idle-ms = <25>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        asset {
            bindings = <
&kp Q  &kp W  &kp J  &kp F  &kp G        &kp Y      &kp P  &kp U      &kp L    &kp SEMI
&kp A  &kp S  &kp E  &kp T  &kp D        &kp H      &kp N  &kp I      &kp O    &kp R
&kp Z  &kp X  &kp C  &kp V  &kp B        &kp K      &kp M  &kp COMMA  &kp DOT  &kp FSLH
                     &mo 1  &kp SPACE    &kp ENTER  &mo 2
            >;
        };

        navigation {
            bindings = <
&kp ESC         &caps_word      &kp CAPS      &kp LCTRL        &kp LEFT_SHIFT    &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP   &kp END         &kp BSPC
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp TAB           &kp LEFT       &kp DOWN       &kp UP        &kp RIGHT       &kp BACKSPACE
&kp LC(Z)       &kp LC(X)       &kp LC(C)     &kp LC(V)        &kp BACKSPACE     &trans         &kp TAB        &kp LEFT_ALT  &kp LEFT_SHIFT  &trans
                                              &none            &none             &kp BACKSPACE  &kp DELETE
            >;
        };

        numbers {
            bindings = <
&kp N1        &kp N2    &kp N3     &kp N4     &kp N5      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GRAVE  &kp GRAVE             &kp SINGLE_QUOTE
&kp N6        &kp N7    &kp N8     &kp N9     &kp N0      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LSHFT  &kp LCTRL             &kp LGUI
&kp ASTERISK  &kp PLUS  &kp MINUS  &kp EQUAL  &kp FSLH    &kp LBKT              &kp RBKT               &none      &kp NON_US_BACKSLASH  &kp LALT
                                   &mo 3      &kp BSPC    &none                 &none
            >;
        };

        functions {
            bindings = <
&caps_word  &kp CAPS  &kp TAB    &trans     &trans     &trans   &trans     &trans     &trans    &trans
&kp F1      &kp F2    &kp F3     &kp F4     &kp F5     &kp F6   &kp F7     &kp F8     &kp F9    &kp F10
&kp LGUI    &kp LALT  &kp LCTRL  &kp LSHFT  &kp F11    &kp F12  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
                                 &trans     &trans     &trans   &trans
            >;
        };

        settings {
            bindings = <
&bt BT_CLR  &bt BT_CLR_ALL  &trans        &trans  &bootloader    &bootloader  &trans  &trans  &trans  &trans
&bt BT_PRV  &bt BT_NXT      &bt BT_SEL 0  &trans  &trans         &trans       &trans  &trans  &trans  &trans
&trans      &trans          &trans        &trans  &trans         &trans       &trans  &trans  &trans  &trans
                                          &tog 4  &trans         &trans       &tog 4
            >;
        };
    };
};
